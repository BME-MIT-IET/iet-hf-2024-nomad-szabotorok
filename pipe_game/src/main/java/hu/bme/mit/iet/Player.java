package hu.bme.mit.iet;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Sivatagi vizhalozat
//  @ File Name : Player.java
//  @ Date : 14/04/2023
//  
//
//

/**
 * A szabotőr és a szerelő származik le belőle.
 * A játékos tud lépni,
 * megváltoztatni, hogy egy pumpában melyik csőből melyik csőbe folyjon a víz.
 * Eltárolja a játkos akciópontjainak a számát, illetve a tartózkodási helyét.
 */
public abstract class Player {
	protected String id;
	protected int actionPoints;
	protected SystemPart position;
	protected int glued;

	/**
	 * Inicializáláskor hívjuk
	 * @param next Felrakja a játékost a megadott elemre
	 */
	void setPos(SystemPart next){
		position = next;
		next.AcceptPlayer(this);
	}

	/**
	 * visszaadja az aktuális pozíció
	 * @return
	 */
	public SystemPart getPosition() {return position;}

	/**
	 * A szerelő leszármazottban valósítjuk meg
	 * @param pump
	 */
	void setPump(SystemPart pump) { }

	/**
	 * A játékos leragadását lehet beállítani
	 * @param x Ennyi körig ragad le a játékos
	 */
	void setGlued(int x) { glued=x; }
	/**
	 * A kör végén hívjuk hogy csökkentsük a még leragadva töltött időt egy körrel
	 * ha az még nagyobb mint nulla
	 */
	void decGlued() {
		if (glued > 0)
			glued--;
	}
	/**
	 * A játékos a paraméterben megadott helyre lép,
	 * ha épp le van ragadva akkor nem tud lépni
	 * @param newPos az új hely, ahova mozog a játékos.
	 */
	public void Move(SystemPart newPos) {
		if (glued != 0)
			return;
		if (newPos.AcceptPlayer(this)){
			position.RemovePlayer(this);
			position = newPos;
		}
	}

	/**
	 * A játékos megváltoztatja, hogy honnan hova folyjon a víz, a pumpában, amin tartózkodik.
	 * @param from a cső, ahonnan folyjon a víz.
	 * @param to a cső, ahova menjen a víz.
	 */
	public void ChangePumpFlow(Pipe from, Pipe to) {
		position.AcceptNewFlow(from, to);
	}

	/**
	 * Amennyiben a leszármazott nem tud csövet kilyukasztani, akkor kiírja, hogy ezt nem teheti meg.
	 */
	public void BreakPipe() {
		position.BreakPipe();
	}

	/**
	 * Amennyiben a leszármazott nem tud csövet javítani, akkor kiírja, hogy ezt nem teheti meg.
	 */
	public void Repair() { }

	/**
	 * Amennyiben a leszármazott nem tud felvenni csövet, akkor kiírja, hogy ezt nem teheti meg.
	 * @param pipe
	 */
	public void CarryPipeEnd(SystemPart pipe) {	}

	/**
	 * Amennyiben a leszármazott nem tud csövet lerakni, akkor kiírja, hogy ezt nem teheti meg.
	 * @return
	 */
	public boolean LayPipe() {
		return false;
	}

	/**
	 * Amennyiben a leszármazott nem tud pumpát felvenni, akkor kiírja, hogy ezt nem teheti meg.
	 */
	public void CarryPump() { }

	/**
	 * Amennyiben a leszármazott nem tud pumpát lerakni, akkor kiírja, hogy ezt nem teheti meg.
	 * @return
	 */
	public SystemPart LayPump() {
		return null;
	}

	/**
	 * Ragadóssá teszi a csövet amin áll a játékos
	 */
	public void GluePipe() {
		position.setGlued();
	}
	public void MakePipeSlippery() {}
	public int getActionPoints() {
		return actionPoints;
	}
	public void setActionPoints(int x) {
		actionPoints = x;
	}
	/**
	 * Csökkenti a játékos akciópontjait egyel
	 */
	public void decActionPoints() {
		actionPoints--;
	}
	public String getPart() {
		return "nothing";
	}

	public String getId() {return id;}
}
